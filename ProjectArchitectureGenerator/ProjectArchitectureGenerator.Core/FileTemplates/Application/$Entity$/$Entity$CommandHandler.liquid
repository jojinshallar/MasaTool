{{- if model.includelocalusing -}}
using {{ model.projectnamespace }}.Application.{{ model.entityname }}.Commands;
{{ raw }}
{{ endraw }}
{{- end -}}
namespace {{ model.projectnamespace }}.Application.{{ model.entityname }}
{
    public class {{ model.entityname }}CommandHandler
    {
        private readonly IRepository<Domain.Entities.{{ model.entityname }}, {{ model.idtype }}> _repository;

        private {{ model.entityname }}CommandHandler(IRepository<Domain.Entities.{{ model.entityname }}, {{ model.idtype }}> repository)
        {
            _repository = repository;
        }

        [EventHandler]
        public async Task CreateHandleAsync(Create{{ model.entityname }}Command command)
        {
            throw new NotImplementedException();
        }

        [EventHandler]
        public async Task DeleteHandleAsync(Delete{{ model.entityname }}Command command)
        {
            throw new NotImplementedException();
        }
    }
}